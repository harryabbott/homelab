# STORAGE
volumes:
  media:
    size: "50Gi"
    path: "/mnt/data/media"
  config:
    size: "20Gi"
    path: "/mnt/data/config"
  torrent:
    size: "50Gi"
    path: "/mnt/data/torrents" #contains the torrents
  downloads:
    size: "50Gi"
    path: "/mnt/data/downloads" #contains the downloads from qbittorrent. Sonarr/Radarr moves them from here to the media volume.

# NETWORKING
# configure DHCP so your server has a static IP. when connecting prowlarr/radarr/sonarr/qbittorrent, use this local static ip. 
# do not use localhost, or your custom DNS name, since kubernetes has its own DNS (coredns in kube-system), so will not work. 
# I think in theory, you can use the fqdn of the k8s svc, but i couldnt get this working and gave up.


plex:
  version: "1.40.2.8395-c67dce28e"
  nodeport: 30000

radarr:
  version: "5.6.0.8846-ls222"
  nodeport: 30001

sonarr:
  version: "4.0.5.1710-ls241"
  nodeport: 30002

qbittorrent: 
  version: "4.6.5"
  nodeport: 30003
  # add "WebUI\HostHeaderValidation=false" to the config for qbittorrent to access the webUI. 
  # WebUI\Password_PBKDF2="@ByteArray(ARQ77eY1NUZaQsuDHbIMCA==:0WMRkYTUWVT9wVvdDtHAjU9b3b7uB8NR1Gur2hmQCvCDpm39Q+PsJRJPaCU51dEiz+dTzh8qbPsL8WkFljQYFQ==)"
  # makes the password adminadmin so you can log in to change it
  # the config is write on shut down, so ensure you add this when the pod is off.

nginx:
  version: "1.27.0"

prowlarr:
  version: "1.18.0"
  nodeport: 30004

ombi: # couldnt get this to work. overseerr seems better anyway.
  enabled: false
  version: "4.43.5"
  nodeport: 30005

flaresolverr:
  version: "v3.3.20"
  nodeport: 30006

overseerr:
  enabled: true
  version: "1.33.2"
  nodeport: 30007

homarr:
  enabled: true
  version: "latest"
  nodeport: 30303

tdarr: #server makes the jobs, node does the actual transcoding. fixed to use integrated node for now
  enabled: true
  server:
    version: "latest"
    nodeport: 30008
  node:
    version: "latest"
    nodeport: 30009

tautulli:
  version: "2.14.3"
  nodeport: 30010